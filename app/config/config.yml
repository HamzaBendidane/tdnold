imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    # document_bundle:
    - { resource: @DocumentBundle/Resources/config/tags.xml }

framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  %locale%
    trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:
#        handler_id: session.handler.memcache

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        limite_slider: 6

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    #bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
#        result_cache_driver:
#            type: memcache
#            host: %session_memcache_host1%
#            port: %session_memcache_port%
#            class: Doctrine\Common\Cache\MemcacheCache
#            instance_class: Memcache

#Configuration Monolog pour les rapports d'erreur
monolog:
    handlers:
        main:
            type:         fingers_crossed
            action_level: critical
            handler:      grouped
        grouped:
            type:    group
            members: [streamed, buffered]
        streamed:
            type:  stream
            path:  "%kernel.logs_dir%/%kernel.environment%.log"
            level: debug
        buffered:
            type:    buffer
            handler: swift
        swift:
            type:       swift_mailer
            from_email: postmaster@trucsdenana.com
            to_email:   siteadmin@trucsdenana.com
            subject:    TDN Rapport des erreurs critiques
            level:      critical
            formatter:  html.formatter

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:
        type: file
        path: "%kernel.root_dir%/spool"

#Sessions
#session:
#    default_locale: %locale%
#    auto-start: true

services:
    html.formatter:
        class: Monolog\Formatter\HtmlFormatter

#    session.memcache:
#        class: Memcache
#        calls:
#             - [ addserver, [ %session_memcache_host1%, %session_memcache_port% ]]

#    session.handler.memcache:
#        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcacheSessionHandler
#        arguments: [ @session.memcache, { prefix: %session_memcache_prefix%, expiretime: %session_memcache_expire% } ]

    tdn.image_processor:
        class: TDN\ImageBundle\Processing\imageProcessor

    tdn.core.antispam:
        class: TDN\CoreBundle\Antispam\simpleScanner

    tdn.core.urlshortener:
        class: TDN\CoreBundle\URL\URLShortener

    tdn.core.urlsitemapper:
        class: TDN\CoreBundle\URL\URLSitemapper
        arguments: [@doctrine.orm.entity_manager, @router]
#        scope: router

    tdn.core.textprocessor:
        class: TDN\CoreBundle\Texte\TextProcessor

    tdn.document.url:
        class: TDN\DocumentBundle\URL\URL
        arguments: [@router]
