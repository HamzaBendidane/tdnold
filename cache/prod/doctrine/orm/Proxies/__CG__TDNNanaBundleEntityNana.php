<?php

namespace Proxies\__CG__\TDN\NanaBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Nana extends \TDN\NanaBundle\Entity\Nana implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setSalt($salt)
    {
        $this->__load();
        return parent::setSalt($salt);
    }

    public function getSalt()
    {
        $this->__load();
        return parent::getSalt();
    }

    public function setPrenom($prenom)
    {
        $this->__load();
        return parent::setPrenom($prenom);
    }

    public function getPrenom()
    {
        $this->__load();
        return parent::getPrenom();
    }

    public function setNom($nom)
    {
        $this->__load();
        return parent::setNom($nom);
    }

    public function getNom()
    {
        $this->__load();
        return parent::getNom();
    }

    public function setDateNaissance($dateNaissance)
    {
        $this->__load();
        return parent::setDateNaissance($dateNaissance);
    }

    public function getDateNaissance()
    {
        $this->__load();
        return parent::getDateNaissance();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setSexe($sexe)
    {
        $this->__load();
        return parent::setSexe($sexe);
    }

    public function getSexe()
    {
        $this->__load();
        return parent::getSexe();
    }

    public function setVille($ville)
    {
        $this->__load();
        return parent::setVille($ville);
    }

    public function getVille()
    {
        $this->__load();
        return parent::getVille();
    }

    public function setOccupation($occupation)
    {
        $this->__load();
        return parent::setOccupation($occupation);
    }

    public function getOccupation()
    {
        $this->__load();
        return parent::getOccupation();
    }

    public function setPopularite($popularite)
    {
        $this->__load();
        return parent::setPopularite($popularite);
    }

    public function getPopularite()
    {
        $this->__load();
        return parent::getPopularite();
    }

    public function setBiographie($biographie)
    {
        $this->__load();
        return parent::setBiographie($biographie);
    }

    public function getBiographie()
    {
        $this->__load();
        return parent::getBiographie();
    }

    public function setDateInscription($dateInscription)
    {
        $this->__load();
        return parent::setDateInscription($dateInscription);
    }

    public function getDateInscription()
    {
        $this->__load();
        return parent::getDateInscription();
    }

    public function setDateAbonnement($dateAbonnement)
    {
        $this->__load();
        return parent::setDateAbonnement($dateAbonnement);
    }

    public function getDateAbonnement()
    {
        $this->__load();
        return parent::getDateAbonnement();
    }

    public function setActive($active)
    {
        $this->__load();
        return parent::setActive($active);
    }

    public function getActive()
    {
        $this->__load();
        return parent::getActive();
    }

    public function setNewsletter($newsletter)
    {
        $this->__load();
        return parent::setNewsletter($newsletter);
    }

    public function getNewsletter()
    {
        $this->__load();
        return parent::getNewsletter();
    }

    public function setBlacklist($blacklist)
    {
        $this->__load();
        return parent::setBlacklist($blacklist);
    }

    public function getBlacklist()
    {
        $this->__load();
        return parent::getBlacklist();
    }

    public function setAdresseIP($adresseIP)
    {
        $this->__load();
        return parent::setAdresseIP($adresseIP);
    }

    public function getV2ID()
    {
        $this->__load();
        return parent::getV2ID();
    }

    public function setV2ID($v2ID)
    {
        $this->__load();
        return parent::setV2ID($v2ID);
    }

    public function getAdresseIP()
    {
        $this->__load();
        return parent::getAdresseIP();
    }

    public function getIdNana()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idNana"];
        }
        $this->__load();
        return parent::getIdNana();
    }

    public function setLnAvatar(\TDN\ImageBundle\Entity\Image $lnAvatar = NULL)
    {
        $this->__load();
        return parent::setLnAvatar($lnAvatar);
    }

    public function getLnAvatar()
    {
        $this->__load();
        return parent::getLnAvatar();
    }

    public function addFilProduction(\TDN\DocumentBundle\Entity\Document $filProductions)
    {
        $this->__load();
        return parent::addFilProduction($filProductions);
    }

    public function removeFilProduction(\TDN\DocumentBundle\Entity\Document $filProductions)
    {
        $this->__load();
        return parent::removeFilProduction($filProductions);
    }

    public function getFilProductions()
    {
        $this->__load();
        return parent::getFilProductions();
    }

    public function addLnSociaux(\TDN\NanaBundle\Entity\NanaNetwork $lnSociaux)
    {
        $this->__load();
        return parent::addLnSociaux($lnSociaux);
    }

    public function removeLnSociaux(\TDN\NanaBundle\Entity\NanaNetwork $lnSociaux)
    {
        $this->__load();
        return parent::removeLnSociaux($lnSociaux);
    }

    public function getLnSociaux()
    {
        $this->__load();
        return parent::getLnSociaux();
    }

    public function addGaleriePerso(\TDN\NanaBundle\Entity\NanaPortraitImageProxy $galeriePerso)
    {
        $this->__load();
        return parent::addGaleriePerso($galeriePerso);
    }

    public function removeGaleriePerso(\TDN\NanaBundle\Entity\NanaPortraitImageProxy $galeriePerso)
    {
        $this->__load();
        return parent::removeGaleriePerso($galeriePerso);
    }

    public function getGaleriePerso()
    {
        $this->__load();
        return parent::getGaleriePerso();
    }

    public function addLnHobbie(\TDN\NanaBundle\Entity\NanaHobby $lnHobbies)
    {
        $this->__load();
        return parent::addLnHobbie($lnHobbies);
    }

    public function removeLnHobbie(\TDN\NanaBundle\Entity\NanaHobby $lnHobbies)
    {
        $this->__load();
        return parent::removeLnHobbie($lnHobbies);
    }

    public function getLnHobbies()
    {
        $this->__load();
        return parent::getLnHobbies();
    }

    public function addExpertise(\TDN\ConseilExpertBundle\Entity\ConseilExpert $expertises)
    {
        $this->__load();
        return parent::addExpertise($expertises);
    }

    public function removeExpertise(\TDN\ConseilExpertBundle\Entity\ConseilExpert $expertises)
    {
        $this->__load();
        return parent::removeExpertise($expertises);
    }

    public function getExpertises()
    {
        $this->__load();
        return parent::getExpertises();
    }

    public function addLnCommentaire(\TDN\CommentaireBundle\Entity\Commentaire $lnCommentaires)
    {
        $this->__load();
        return parent::addLnCommentaire($lnCommentaires);
    }

    public function removeLnCommentaire(\TDN\CommentaireBundle\Entity\Commentaire $lnCommentaires)
    {
        $this->__load();
        return parent::removeLnCommentaire($lnCommentaires);
    }

    public function getLnCommentaires()
    {
        $this->__load();
        return parent::getLnCommentaires();
    }

    public function addRole(\TDN\NanaBundle\Entity\NanaRoles $roles)
    {
        $this->__load();
        return parent::addRole($roles);
    }

    public function removeRole(\TDN\NanaBundle\Entity\NanaRoles $roles)
    {
        $this->__load();
        return parent::removeRole($roles);
    }

    public function getRoles()
    {
        $this->__load();
        return parent::getRoles();
    }

    public function addFollow(\TDN\NanaBundle\Entity\Nana $follows)
    {
        $this->__load();
        return parent::addFollow($follows);
    }

    public function removeFollow(\TDN\NanaBundle\Entity\Nana $follows)
    {
        $this->__load();
        return parent::removeFollow($follows);
    }

    public function getFollows()
    {
        $this->__load();
        return parent::getFollows();
    }

    public function addIsFollowed(\TDN\NanaBundle\Entity\Nana $isFollowed)
    {
        $this->__load();
        return parent::addIsFollowed($isFollowed);
    }

    public function removeIsFollowed(\TDN\NanaBundle\Entity\Nana $isFollowed)
    {
        $this->__load();
        return parent::removeIsFollowed($isFollowed);
    }

    public function getIsFollowed()
    {
        $this->__load();
        return parent::getIsFollowed();
    }

    public function addPoke(\TDN\DocumentBundle\Entity\Document $pokes)
    {
        $this->__load();
        return parent::addPoke($pokes);
    }

    public function removePoke(\TDN\DocumentBundle\Entity\Document $pokes)
    {
        $this->__load();
        return parent::removePoke($pokes);
    }

    public function getPokes()
    {
        $this->__load();
        return parent::getPokes();
    }

    public function eraseCredentials()
    {
        $this->__load();
        return parent::eraseCredentials();
    }

    public function serialize()
    {
        $this->__load();
        return parent::serialize();
    }

    public function isAccountNonExpired()
    {
        $this->__load();
        return parent::isAccountNonExpired();
    }

    public function isAccountNonLocked()
    {
        $this->__load();
        return parent::isAccountNonLocked();
    }

    public function isCredentialsNonExpired()
    {
        $this->__load();
        return parent::isCredentialsNonExpired();
    }

    public function isEnabled()
    {
        $this->__load();
        return parent::isEnabled();
    }

    public function unserialize($serialized)
    {
        $this->__load();
        return parent::unserialize($serialized);
    }

    public function addFilConcour(\TDN\ConcoursBundle\Entity\ConcoursParticipant $filConcours)
    {
        $this->__load();
        return parent::addFilConcour($filConcours);
    }

    public function removeFilConcour(\TDN\ConcoursBundle\Entity\ConcoursParticipant $filConcours)
    {
        $this->__load();
        return parent::removeFilConcour($filConcours);
    }

    public function getFilActivite()
    {
        $this->__load();
        return parent::getFilActivite();
    }

    public function addFilActivite(\TDN\CoreBundle\Entity\Journal $activite)
    {
        $this->__load();
        return parent::addFilActivite($activite);
    }

    public function removeFilActivite(\TDN\CoreBundle\Entity\Journal $activite)
    {
        $this->__load();
        return parent::removeFilActivite($activite);
    }

    public function getFilConcours()
    {
        $this->__load();
        return parent::getFilConcours();
    }

    public function getAge($typeReturn = 'string')
    {
        $this->__load();
        return parent::getAge($typeReturn);
    }

    public function addSetExpertise(\TDN\NanaBundle\Entity\NanaExpertise $setExpertises)
    {
        $this->__load();
        return parent::addSetExpertise($setExpertises);
    }

    public function removeSetExpertise(\TDN\NanaBundle\Entity\NanaExpertise $setExpertises)
    {
        $this->__load();
        return parent::removeSetExpertise($setExpertises);
    }

    public function getSetExpertises()
    {
        $this->__load();
        return parent::getSetExpertises();
    }

    public function updatePopularite($points)
    {
        $this->__load();
        return parent::updatePopularite($points);
    }

    public function resetPopularite()
    {
        $this->__load();
        return parent::resetPopularite();
    }

    public function recalculePopularite()
    {
        $this->__load();
        return parent::recalculePopularite();
    }

    public function getLogarithmicGrade()
    {
        $this->__load();
        return parent::getLogarithmicGrade();
    }

    public function getLinearGrade()
    {
        $this->__load();
        return parent::getLinearGrade();
    }

    public function getGrade($method = 'lineaire')
    {
        $this->__load();
        return parent::getGrade($method);
    }

    public function addFilPresence(\TDN\NanaBundle\Entity\NanaSocialNetwork $filPresence)
    {
        $this->__load();
        return parent::addFilPresence($filPresence);
    }

    public function removeFilPresence(\TDN\NanaBundle\Entity\NanaSocialNetwork $filPresence)
    {
        $this->__load();
        return parent::removeFilPresence($filPresence);
    }

    public function getFilPresence()
    {
        $this->__load();
        return parent::getFilPresence();
    }

    public function addFilAlerte(\TDN\CoreBundle\Entity\Journal $filAlertes)
    {
        $this->__load();
        return parent::addFilAlerte($filAlertes);
    }

    public function removeFilAlerte(\TDN\CoreBundle\Entity\Journal $filAlertes)
    {
        $this->__load();
        return parent::removeFilAlerte($filAlertes);
    }

    public function getFilAlertes()
    {
        $this->__load();
        return parent::getFilAlertes();
    }

    public function setOffresPartenaires($offresPartenaires)
    {
        $this->__load();
        return parent::setOffresPartenaires($offresPartenaires);
    }

    public function getOffresPartenaires()
    {
        $this->__load();
        return parent::getOffresPartenaires();
    }

    public function setSemainePromue($semainePromue)
    {
        $this->__load();
        return parent::setSemainePromue($semainePromue);
    }

    public function getSemainePromue()
    {
        $this->__load();
        return parent::getSemainePromue();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'username', 'password', 'salt', 'prenom', 'nom', 'sexe', 'dateNaissance', 'email', 'ville', 'occupation', 'popularite', 'biographie', 'dateInscription', 'dateAbonnement', 'active', 'newsletter', 'offresPartenaires', 'blacklist', 'adresseIP', 'semainePromue', 'v2ID', 'idNana', 'lnAvatar', 'filProductions', 'lnSociaux', 'galeriePerso', 'lnHobbies', 'setExpertises', 'expertises', 'lnCommentaires', 'filConcours', 'filActivite', 'filAlertes', 'filPresence', 'roles', 'follows', 'isFollowed', 'pokes');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}